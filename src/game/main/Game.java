package game.main;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsEnvironment;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferStrategy;
import java.io.File;
import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;

public class Game extends Canvas implements Runnable, MouseListener, MouseMotionListener{

	private static final long serialVersionUID = 6722640387316353634L;
	public static int t = 100;
	public static final int WIDTH = 7 * t, HEIGHT = 7 * t;
	
	public static int score = 0;
	private Thread thread;
	private boolean running = false;
	public static Handler handler;
	private Window window;
	public static HUD hud;
	public static Player player;
	public static long seconds;
	public static boolean mousePressed = false;
	public static int mx;
	public static int my;
	public static Spawner spawner;
	
	Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
	private Menu menu;
	
	public enum STATE{
		Menu,
		Game
	};
	
	public static STATE gameState = STATE.Menu;
	
	public static int[][] map = {
			{'w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ','w','w','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w','w','w','w','w',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ','w','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w','w',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ','w','w','w','w','w',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w','w','w',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ','w','w','w','w',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w','w',' ',' ','w',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ','w',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ','w','w',' ',' ',' ',' ','w',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ','w',' ','w',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ','w','w','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w','w',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ','w','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w','w','w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w','w',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ','w','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w','w',' ',' ','w',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ','w','w','w','w','w','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w','w','w',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ','w','w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w',' ',' ',' ',' ',' ',' ','w'}, 
			{'w',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','w'}, 
			{'w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w','w'} 
	};
	public static int mapW = 50;
	public static int mapH = 50;
	
	public Game() {
		handler = new Handler();
		player = new Player(WIDTH/2, HEIGHT/2, t/4, t/4, t/20, ID.Player);
		menu = new Menu();
		spawner = new Spawner();
		SoundEffect.init();
	    SoundEffect.volume = SoundEffect.Volume.LOW;  // un-mute
        SoundEffect.MUSIC.play();
		
		this.addKeyListener(new KeyInput());
		this.addMouseListener(menu);
		this.addMouseListener(this);
		this.addMouseMotionListener(this);
		
		window = new Window(WIDTH, HEIGHT, "Game", this);
		hud = new HUD();

		if(gameState == STATE.Game) {
			handler = new Handler();
			player = new Player(WIDTH/2, HEIGHT/2, t/4, t/4, t/20, ID.Player);
			handler.addObject(player);
			for(int i = 0; i < mapH; i++) {
				for(int j = 0; j < mapW; j++) {
					if(map[i][j] == 'w') {
						handler.addObject(new Wall((WIDTH/mapW)*j, (HEIGHT/mapH)*i, WIDTH/mapW, HEIGHT/mapH, 0, ID.Wall));	
					}
					if(map[i][j] == 'e') {
						handler.addObject(new BasicEnemy((WIDTH/mapW)*j, (HEIGHT/mapH)*i, WIDTH/mapW, HEIGHT/mapH, 10, ID.Enemy));
					}
				}
			}
		}
	}
	
	public synchronized void start() {
		thread = new Thread(this);
		thread.start();
		running = true;
	}
	
	public synchronized void stop() {
		try {
			thread.join();
			running = false;
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	public void run() {
		long lastTime = System.nanoTime();
		double amountOfTicks = 60.0;
		double ns = 1000000000 / amountOfTicks;
		double delta = 0;
		long timer = System.currentTimeMillis();
		int frames = 0;
		while(running) {

			long now = System.nanoTime();
			delta += (now - lastTime) / ns;
			lastTime = now;
			
			while(delta >= 1) {
				tick();
				delta--;
			}
			
			if(running) {
				render();
			}
			
			frames++;

			if(System.currentTimeMillis() - timer > 1000) {
				timer += 1000;
				System.out.println("FPS: " + frames);
				frames = 0;
			}
		}
		stop();
	}
	
	private void tick() {
		
		handler.tick();
		
		if (gameState == STATE.Game) {
			hud.tick();	
			spawner.tick();
		}
		else if(gameState == STATE.Menu){
			menu.tick();
		}
		
	}
	
	private void render() {
		BufferStrategy bs = this.getBufferStrategy();
		if(bs == null) {
			this.createBufferStrategy(3);
			return;
		}
		Graphics g = bs.getDrawGraphics();
		
        Graphics2D g2 = (Graphics2D)g.create();		
		g2.scale((float)window.frame.getHeight()/HEIGHT, (float)window.frame.getHeight()/HEIGHT);
		g2.drawImage(Images.floor, 0, 0, WIDTH, HEIGHT, null);

		handler.render(g2);
		if(gameState == STATE.Game) {
			hud.render(g);
		}

		if(gameState == STATE.Menu) {
			menu.render(g);
		}

		bs.show();
		g2.dispose();
	}
	
	public static int clamp(int var, int min, int max) {
		if(var >= max)
			return max;
		else if(var <= min)
			return min;
		else
			return var;
	}
	
	public static void main(String args[]) {

		new Game();
	}

	
	public void mouseClicked(MouseEvent e) {

	}

	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		mousePressed = true;
		

	}

	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		mousePressed = false;

	}

	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	public void mouseDragged(MouseEvent e) {
		// TODO Auto-generated method stub
		mx = e.getX();
	    my = e.getY();
	}

	public void mouseMoved(MouseEvent e) {
		// TODO Auto-generated method stub
		mx = e.getX();
	    my = e.getY();
		System.out.println(Game.mx + " " + Game.my);

	}

	

}